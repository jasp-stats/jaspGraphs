% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PlotPieChart.R
\name{plotPieChart}
\alias{plotPieChart}
\alias{plotPieChartNonPolar}
\title{Make a Pie Chart}
\usage{
plotPieChart(
  value,
  group,
  legendName = deparse(substitute(group)),
  legendLabels = if (is.factor(group)) levels(group) else unique(group),
  legendColors = NULL,
  showAxisText = TRUE,
  showAxisTicks = showAxisText,
  asPercentages = TRUE,
  palette = getGraphOption("palette"),
  ...
)

plotPieChartNonPolar(
  value,
  group,
  legendName = deparse(substitute(group)),
  legendLabels = if (is.factor(group)) levels(group) else unique(group),
  legendColors = NULL,
  showAxisText = TRUE,
  showAxisTicks = showAxisText,
  asPercentages = TRUE,
  palette = getGraphOption("palette"),
  ...
)
}
\arguments{
\item{value}{The value for each group.}

\item{group}{Character of factor that indicates which value belongs to which group.}

\item{legendName}{Character, title of the legend.}

\item{legendLabels}{Character vector with names for the legend.}

\item{legendColors}{Character vector with colors.}

\item{showAxisText}{Logical, should the axis text be shown?}

\item{showAxisTicks}{Logical, should the ticks on the polar coordinates be shown?}

\item{asPercentages}{Logical, should value be transformed to percentages? Recommended to be true.}

\item{palette}{Character vector with palette name. If this option is set then legendColors is ignored. If palette is NULL then legendColors are used.}

\item{...}{Arguments to be passed to \code{\link{themeJasp}}.}
}
\value{
a ggplot object.
}
\description{
Make a Pie Chart

Make a pie chart without coord_polar
}
\examples{
library(ggplot2)
value <- c(25, 25, 50)
gg <- letters[1:3]
ga <- letters[4:6]

g <- plotPieChart(value, gg)
print(g)
plotPieChart(value, gg, ga)
plotPieChart(value, gg, ga, showAxisTicks = FALSE)
plotPieChart(value, gg, ga, showAxisTicks = FALSE, legend.position = "none") # hide the legend

# axis can still be modified
print(g + scale_y_continuous(breaks = c(50, 75, 0)))
print(g + scale_y_continuous(breaks = seq(0, 100, 10)))
cm <- c(0, cumsum(value))
breaks <- 100 - (cm[-1] + cm[-length(cm)]) / 2
print(g + scale_y_continuous(breaks = breaks, labels = gg))

# something more extreme:
value <- rpois(25, 10)
g <- as.character(seq_len(25))
plotPieChart(value, g)
}
